/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.yue9944882.apiserver_builder_alpha_protobuf_example.pkg.apis.simple.v1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";
import "sigs.k8s.io/apiserver-builder-alpha/pkg/builders/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1";

// +k8s:openapi-gen=true
// +resource:path=deepones
// DeepOne defines a resident of innsmouth
message DeepOne {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DeepOneSpec spec = 2;

  optional DeepOneStatus status = 3;
}

message DeepOneList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated DeepOne items = 2;
}

// DeepOnesSpec defines the desired state of DeepOne
message DeepOneSpec {
  // fish_required defines the number of fish required by the DeepOne.
  // NOTE: the type has to be int64 instead of ambiguous int
  optional int64 fish_required = 1;

  optional SampleElem sample = 2;

  optional SamplePointerElem sample_pointer = 3;

  repeated SampleListElem sample_list = 4;

  repeated SampleListPointerElem sample_pointer_list = 5;

  map<string, SampleMapElem> sample_map = 6;

  // NOTE: Maps using pointer as value type is not supported protobuf serialization
  // SamplePointerMap     map[string]*SampleMapPointerElem `json:"sample_pointer_map,omitempty" protobuf:"bytes,7,rep,name=sample_pointer_map"`
  optional int64 sample_primitive_alias = 8;

  // Example of using a constant
  optional string const = 9;

  optional string constPtr = 10;

  repeated string constSlice = 11;

  map<string, string> constMap = 12;
}

// DeepOneStatus defines the observed state of DeepOne
message DeepOneStatus {
  // actual_fish defines the number of fish caught by the DeepOne.
  // NOTE: the type has to be int64 instead of ambiguous int
  optional int64 actual_fish = 1;
}

message SampleElem {
  optional SampleSubElem sub = 1;
}

message SampleListElem {
  repeated SampleListSubElem sub = 1;
}

message SampleListPointerElem {
  repeated SampleListPointerSubElem sub = 1;
}

message SampleListPointerSubElem {
  optional string foo = 1;
}

message SampleListSubElem {
  optional string foo = 1;
}

message SampleMapElem {
  map<string, SampleMapSubElem> sub = 1;
}

message SampleMapPointerElem {
}

message SampleMapPointerSubElem {
  optional string foo = 1;
}

message SampleMapSubElem {
  optional string foo = 1;
}

message SamplePointerElem {
  optional SamplePointerSubElem sub = 1;
}

message SamplePointerSubElem {
  optional string foo = 1;
}

message SampleSubElem {
  optional string foo = 1;
}

